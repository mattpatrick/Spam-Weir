(function() {
  var extend, log, request, sendHub;

  extend = require('xtend');

  request = require('request');

  log = {
    debug: function(message) {
      if (process.env.LOG_LEVEL === 'debug') {
        return console.log(message);
      }
    }
  };

  sendHub = {
    config: {},
    username: function(username) {
      return this.config.username = username;
    },
    apiKey: function(apiKey) {
      return this.config.apiKey = apiKey;
    },
    auth: function() {
      return {
        username: this.config.username,
        api_key: this.config.apiKey
      };
    },
    createContact: function(_arg, cb) {
      var json, name, number, qs, req;
      name = _arg.name, number = _arg.number;
      if (!((name != null) && (number != null))) {
        throw new Error('createContact requires name and number');
      }
      if (number.match(/[^\d+]/)) {
        throw new Error('createContact number must only be digits');
      }
      if (number.length === 12 && number.indexOf('+1') === 0) {
        number = number.slice(2);
      }
      if (number.length !== 10) {
        throw new Error('createContact number length must be 10');
      }
      qs = extend(this.auth());
      json = {
        name: name,
        number: number
      };
      log.debug("Sendhub Request: Create Contact ('" + name + "', " + number + ")");
      return req = request.post('https://api.sendhub.com/v1/contacts/', {
        json: json,
        qs: qs
      }, function(err, res) {
        if ((err != null) || res.statusCode !== 201) {
          return cb(new Error('Could not create contact'));
        }
        return cb(null, res.body);
      });
    },
    listContacts: function(filterOptions, cb) {
      var qs, req;
      if (typeof filterOptions === 'function') {
        cb = filterOptions;
        filterOptions = {};
      }
      qs = extend(this.auth(), filterOptions);
      log.debug("Sendhub Request: List Contacts");
      return req = request.get('https://api.sendhub.com/v1/contacts/', {
        json: true,
        qs: qs
      }, function(err, res) {
        var contacts;
        if (err != null) {
          return cb(new Error('Could not list contacts'));
        }
        contacts = res.body.objects;
        return cb(null, contacts);
      });
    },
    sendMessage: function(_arg, cb) {
      var contact, json, qs, req, text;
      contact = _arg.contact, text = _arg.text;
      if ((contact != null ? contact.id : void 0) == null) {
        throw new Error('sendMessage requires contact');
      }
      if (text == null) {
        throw new Error('sendMessage requires text');
      }
      qs = extend(this.auth());
      json = {
        contacts: [contact.id_str || contact.id],
        text: text
      };
      log.debug("Sendhub Request: Send Message (" + contact.id + ", text)");
      return req = request.post('https://api.sendhub.com/v1/messages/', {
        json: json,
        qs: qs
      }, function(err, res) {
        if (err != null) {
          return cb(new Error('Could not send message'));
        }
        return cb(null, res.body);
      });
    }
  };

  module.exports = sendHub;

}).call(this);
